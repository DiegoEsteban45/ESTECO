marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia del número de acidez por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Acides",  tickvals = seq(min(vino_blanco_data$volatile.acidity), max(vino_blanco_data$volatile.acidity), by = 0.1)),
margin = list(b = 100))
fig
library(dplyr)
library(ggpubr)
library(plotly)
library(kableExtra)
library(summarytools)
library(psych)
library(DT)
library(modeest)
my_colors <- sample(c('#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99',
'#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a',
'#ffff99', '#b15928'), num_points, replace = TRUE)
library(dplyr)
library(ggpubr)
library(plotly)
library(kableExtra)
library(summarytools)
library(psych)
library(DT)
library(modeest)
banks_data <- read.csv2("bank-additional-full.csv")
banks_data <- banks_data %>%
mutate(
emp.var.rate = as.numeric(emp.var.rate),
cons.price.idx = as.numeric(cons.price.idx),
cons.conf.idx = as.numeric(cons.conf.idx),
euribor3m = as.numeric(euribor3m),
nr.employed = as.numeric(nr.employed)
)
age <-(banks_data[,1]) # vector con las edades
duration <-(banks_data[,11]) # duración de la ultima llamada en segúndos
campaign <- (banks_data[,12]) # número de contactos realizados durante la campaña para un cliente en específico
pday <- (banks_data[,13]) # vetor con los números de días desde la ultima llamada
previous <- (banks_data[,14]) # número de contactos antes de la campaña
emp.varate.rate <-(banks_data[,16])  # tasa de variación del empleo durante la campaña
cons.price.idx <- (banks_data[,17]) # el mínimo sueldo para vivir
cons.conf.idx <- (banks_data[,18]) # idice de confianza, si estan inviertiendo, ahorrando o solo sobreviviendo
euribor3m <- (banks_data[,19]) # El Euribor a 3 meses es el tipo de interés a la que una selección de bancos europeos se prestan dinero entre sí en euros con vencimientos a 3 meses
nr.employed <- (banks_data[,20]) # números de empleados
cuantitative_banks_data<- data.frame(age, duration, campaign, pday, previous, emp.varate.rate, cons.price.idx, cons.conf.idx, euribor3m, nr.employed)
metricas = describe(cuantitative_banks_data,IQR=T,quant=c(.25,.50,.75)) #Cálculo e métricas
datatable(
metricas,
options = list(pageLength = 10),
caption = "Tabla descriptiva de los datos cuantitativos"
)
admin =              banks_data[banks_data$job =="admin." & banks_data$y=="yes",]
blue_collar =   banks_data[banks_data$job =="blue-collar" & banks_data$y=="yes",]
entrepreneur = banks_data[banks_data$job =="entrepreneur" & banks_data$y=="yes",]
housemaid =       banks_data[banks_data$job =="housemaid" & banks_data$y=="yes",]
management =     banks_data[banks_data$job =="management" & banks_data$y=="yes",]
retired =           banks_data[banks_data$job =="retired" & banks_data$y=="yes",]
self_employed = banks_data[banks_data$job =="self-employed " & banks_data$y=="yes",]
services =         banks_data[banks_data$job =="services" & banks_data$y=="yes",]
student =           banks_data[banks_data$job =="student" & banks_data$y=="yes",]
technician =     banks_data[banks_data$job =="technician" & banks_data$y=="yes",]
unemployed =     banks_data[banks_data$job =="unemployed" & banks_data$y=="yes",]
unknow =             banks_data[banks_data$job =="unknow" & banks_data$y=="yes",]
admin = nrow(admin)
blue_collar = nrow(blue_collar)
entrepreneur = nrow(entrepreneur)
housemaid = nrow(housemaid)
management = nrow(management)
retired = nrow(retired)
self_employed = nrow(self_employed)
services = nrow(services)
student = nrow(student)
technician = nrow(technician)
unemployed = nrow(unemployed)
unknow = nrow(unknow)
jobs <- c("admin.", "blue-collar", "entrepreneur", "housemaid", "management",
"retired", "self-employed", "services", "student", "technician",
"unemployed", "unknow")
n_employees <- c(admin, blue_collar, entrepreneur, housemaid, management,
retired, self_employed, services, student, technician,
unemployed, unknow)
data_jobs_sus <- data.frame(job = jobs, number_of_yes = n_employees)
fig <- plot_ly(data_jobs_sus, x = ~job, y = ~number_of_yes, type = 'bar',
marker = list(color = 'skyblue'))
fig <- fig %>%
layout(title = "Número de subscripciones aceptadas por profesión",
xaxis = list(title = "Tipo de trabajo", tickangle = -45),
yaxis = list(title = "Número de suscripciones aceptadas"),
margin = list(b = 100))  # Espacio adicional para etiquetas inclinadas
fig
menor_250 = banks_data[banks_data$duration <= 250 & banks_data$y=="yes",] # menor a 250
menor_500 = banks_data[banks_data$duration > 250 & banks_data$duration <= 500 & banks_data$y=="yes",]
menor_750 = banks_data[banks_data$duration > 500 & banks_data$duration <= 750 & banks_data$y=="yes",]
menor_1000 = banks_data[banks_data$duration > 750 & banks_data$duration <= 1000 & banks_data$y == "yes",]
menor_1250 = banks_data[banks_data$duration > 1000 & banks_data$duration <= 1250 & banks_data$y == "yes",]
menor_1500 = banks_data[banks_data$duration > 1250 & banks_data$duration <= 1500 & banks_data$y == "yes",]
menor_1750 = banks_data[banks_data$duration > 1500 & banks_data$duration <= 1750 & banks_data$y == "yes",]
menor_2000 = banks_data[banks_data$duration > 1750 & banks_data$duration <= 2000 & banks_data$y == "yes",]
menor_2250 = banks_data[banks_data$duration > 2000 & banks_data$duration <= 2250 & banks_data$y == "yes",]
menor_2500 = banks_data[banks_data$duration > 2250 & banks_data$duration <= 2500 & banks_data$y == "yes",]
menor_2750 = banks_data[banks_data$duration > 2500 & banks_data$duration <= 2750 & banks_data$y == "yes",]
menor_3000 = banks_data[banks_data$duration > 2750 & banks_data$duration <= 3000 & banks_data$y == "yes",]
menor_3250 = banks_data[banks_data$duration > 3000 & banks_data$duration <= 3250 & banks_data$y == "yes",]
menor_3500 = banks_data[banks_data$duration > 3250 & banks_data$duration <= 3500 & banks_data$y == "yes",]
menor_3750 = banks_data[banks_data$duration > 3500 & banks_data$duration <= 3750 & banks_data$y == "yes",]
menor_250 = nrow(menor_250)
menor_500 = nrow(menor_500)
menor_750 = nrow(menor_750)
menor_1000 = nrow(menor_1000)
menor_1250 = nrow(menor_1250)
menor_1500 = nrow(menor_1500)
menor_1750 = nrow(menor_1750)
menor_2000 = nrow(menor_2000)
menor_2250 = nrow(menor_2250)
menor_2500 = nrow(menor_2500)
menor_2750 = nrow(menor_2750)
menor_3000 = nrow(menor_3000)
menor_3250 = nrow(menor_3250)
menor_3500 = nrow(menor_3500)
menor_3750 = nrow(menor_3750)
rango <- c("0-250", "250-500", "500-750", "750-1000", "1000-1250", "1250-1500", "1500-1750", "1750-2000", "2000-2250", "2250-2500", "2500-2750", "2750-3000", "3000-3250", "3250-3500", "3500-3750")
number_of_yes_rango <- c(menor_250, menor_500, menor_750, menor_1000, menor_1250, menor_1500,
menor_1750, menor_2000, menor_2250, menor_2500, menor_2750, menor_3000,
menor_3250, menor_3500, menor_3750)
data_duration_sus <- data.frame(duración = rango, number_of_yes = number_of_yes_rango)
data_duration_sus$duración <- factor(data_duration_sus$duración, levels = rango)
fig <- plot_ly(data_duration_sus, x = ~duración, y = ~number_of_yes, type = 'bar',
marker = list(color = 'orange'))
fig <- fig %>%
layout(title = "Número de subscripciones aceptadas según duración de las llamadas",
xaxis = list(title = "Duración de llamada en segundos"),
yaxis = list(title = "Número de subscripciones aceptadas"),
margin = list(b = 100))  # Espacio adicional para etiquetas inclinadas
fig
menor_17 = banks_data[banks_data$age <= 17 & banks_data$y=="yes",]
menor_27 = banks_data[banks_data$age > 17 & banks_data$age <= 27 & banks_data$y == "yes",]
menor_37 = banks_data[banks_data$age > 27 & banks_data$age <= 37 & banks_data$y == "yes",]
menor_47 = banks_data[banks_data$age > 37 & banks_data$age <= 47 & banks_data$y == "yes",]
menor_57 = banks_data[banks_data$age > 47 & banks_data$age <= 57 & banks_data$y == "yes",]
menor_67 = banks_data[banks_data$age > 57 & banks_data$age <= 67 & banks_data$y == "yes",]
menor_77 = banks_data[banks_data$age > 67 & banks_data$age <= 77 & banks_data$y == "yes",]
menor_87 = banks_data[banks_data$age > 77 & banks_data$age <= 87 & banks_data$y == "yes",]
menor_97 = banks_data[banks_data$age > 87 & banks_data$age <= 97 & banks_data$y == "yes",]
menor_17 = nrow(menor_17)
menor_27 = nrow(menor_27)
menor_37 = nrow(menor_37)
menor_47 = nrow(menor_47)
menor_57 = nrow(menor_57)
menor_67 = nrow(menor_67)
menor_77 = nrow(menor_77)
menor_87 = nrow(menor_87)
menor_97 = nrow(menor_97)
rango_ed <- c("0-17", "17-27", "27-37", "37-47", "47-57", "57-67", "67-77", "77-87",
"87-97")
number_of_yes_edad <- c(menor_17, menor_27, menor_37, menor_47, menor_57, menor_67,
menor_77, menor_87, menor_97)
data_edad_sus <- data.frame(edad = rango_ed, number_of_yes = number_of_yes_edad)
# Crear el gráfico de barras con plotly
fig <- plot_ly(data_edad_sus, x = ~edad, y = ~number_of_yes, type = 'bar',
marker = list(color = 'gold'))
fig <- fig %>%
layout(title = "Número de subs aceptadas según rangos de edades",
xaxis = list(title = "Rango de edades", tickangle = -45),
yaxis = list(title = "Número de suscripciones aceptadas"),
margin = list(b = 100))
fig
jobs <- banks_data[,2]
data_jobs_age <- data.frame(trabajo = jobs, edad = age)
fig <- plot_ly(data_jobs_age, x = ~trabajo, y = ~age, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de Edades por trabajo",
xaxis = list(title = "Empleo", tickangle = -45),
yaxis = list(title = "Edad"),
margin = list(b = 100))
fig
jobs <- banks_data[,2]
admin_edad = data_jobs_age[data_jobs_age$trabajo == "admin.",]
fig <- plot_ly(admin_edad, x = ~edad, y = ~trabajo, type = 'histogram',
marker = list(color = 'lightgreen'))
fig <- fig %>%
layout(
title = "Frecuencia de las edades de los administradores",
xaxis = list(title = "Edad", tickangle = -45),
yaxis = list(
title = "Cantidad de administradores",
tickvals = seq(0, 1200, by = 100)
),
margin = list(b = 100)
)
fig
# Crear un vector de colores para cada punto
num_points <- nrow(banks_data)  # Número de puntos en los datos
my_colors <- sample(c('#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99',
'#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a',
'#ffff99', '#b15928'), num_points, replace = TRUE)
fig <- plot_ly(data=banks_data,x=~age,y=~cons.conf.idx,frame=~job,
type="scatter", mode="markers",
marker = list(color = my_colors,  # Asignar colores personalizados
size = 5),  # Tamaño de los puntos
width=600, height=600,
symbol=I("circle-dot"),
showlegend=FALSE)
fig <- fig %>%
layout(
title = "Confianza según edad por cada trabajo",
xaxis = list(title = "Edad"),
yaxis = list(
title = "Índice Confianza")
)
fig
vino_blanco_data <- read.csv2("winequality-white.csv")
vino_blanco_data <- vino_blanco_data %>%
mutate(
fixed.acidity = as.numeric(fixed.acidity),
volatile.acidity = as.numeric(volatile.acidity),
citric.acid = as.numeric(citric.acid),
residual.sugar = as.numeric(residual.sugar),
chlorides = as.numeric(chlorides),
free.sulfur.dioxide = as.numeric(free.sulfur.dioxide),
total.sulfur.dioxide = as.numeric(total.sulfur.dioxide),
density = as.numeric(density),
pH = as.numeric(pH),
sulphates = as.numeric(sulphates),
alcohol = as.numeric(alcohol),
quality = as.factor(quality))
fixed.acidity <-(vino_blanco_data[,1]) # vector con las acidad fija
volatile.acidity <-(vino_blanco_data[,2]) # acidad volatil
citric.acid <- (vino_blanco_data[,3]) # acidad citrica
residual.sugar <- (vino_blanco_data[,4]) # azúcar residual
chlorides <- (vino_blanco_data[,5]) # cloruro
free.sulfur.dioxide <-(vino_blanco_data[,6])  # dioxido de sulfuro libre
total.sulfur.dioxide <- (vino_blanco_data[,7]) # dioxido de sulfuro total
density.vino <- (vino_blanco_data[,8]) # densidad del vino
ph <- (vino_blanco_data[,9]) # ph del vino
sulphates <- (vino_blanco_data[,10]) #creo que se refiere a sulphites o sulfitos que preservan a los vinos, porque sulphates se utiliza para la espuma de shampo y jabón
alcohol <- (vino_blanco_data[,11]) #grado de alcohol, del vino
quality <- (vino_blanco_data[,12]) #calidad del vino
vino_blanco_data_frame <- data.frame(fixed.acidity, volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density.vino, ph, sulphates, alcohol, quality)
metricas = describe(vino_blanco_data_frame,IQR=T,quant=c(.25,.50,.75)) #Cálculo e métricas
datatable(
metricas,
options = list(pageLength = 10),
caption = "Tabla descriptiva del vino blanco"
)
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~fixed.acidity, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de la acidez fija por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Acides",  tickvals = seq(3.8, 14.2, by = 0.8)),
margin = list(b = 100))
fig
cat("Media: ", mean(fixed.acidity))
cat("\nMediana: ",median(fixed.acidity))
cat("\nModa: ",mfv(fixed.acidity))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~volatile.acidity, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de la acidez volátil por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Acides",  tickvals = seq(min(vino_blanco_data$volatile.acidity), max(vino_blanco_data$volatile.acidity), by = 0.1)),
margin = list(b = 100))
fig
cat("Media: ",mean(volatile.acidity))
cat("\nMediana: ",median(volatile.acidity))
cat("\nModa: ",mfv(volatile.acidity))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~citric.acid, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de la acidez cítrica por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Acides",  tickvals = seq(min(vino_blanco_data$citric.acid), max(vino_blanco_data$citric.acid), by = 0.1)),
margin = list(b = 100))
fig
cat("Media: ",mean(citric.acid))
cat("\nMediana: ",median(citric.acid))
cat("\nModa: ",mfv(citric.acid))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~residual.sugar, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia del azúcar residual por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Azúcar residual",  tickvals = seq(min(vino_blanco_data$residual.sugar), max(vino_blanco_data$residual.sugar), by = 5)),
margin = list(b = 100))
fig
cat("Media: ",mean(residual.sugar))
cat("\nMediana: ",median(residual.sugar))
cat("\nModa: ",mfv(residual.sugar))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~chlorides, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia del cloruro por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Cloruro",  tickvals = seq(min(vino_blanco_data$chlorides), max(vino_blanco_data$chlorides), by = 0.02)),
margin = list(b = 100))
fig
cat("Media: ",mean(chlorides))
cat("\nMediana: ",median(chlorides))
cat("\nModa: ",mfv(chlorides))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~free.sulfur.dioxide, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de dioxido de sulfuro libre por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Dioxido de sulfuro libre",  tickvals = seq(min(vino_blanco_data$free.sulfur.dioxide), max(vino_blanco_data$free.sulfur.dioxide), by = 17)),
margin = list(b = 100))
fig
cat("Media: ",mean(free.sulfur.dioxide))
cat("\nMediana: ",median(free.sulfur.dioxide))
cat("\nModa: ",mfv(free.sulfur.dioxide))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~total.sulfur.dioxide, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de dioxido de sulfuro total por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Dioxido de sulfuro total",  tickvals = seq(min(vino_blanco_data$total.sulfur.dioxide), max(vino_blanco_data$total.sulfur.dioxide), by = 42.5)),
margin = list(b = 100))
fig
cat("Media: ",mean(total.sulfur.dioxide))
cat("\nMediana: ",median(total.sulfur.dioxide))
cat("\nModa: ",mfv(total.sulfur.dioxide))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~density.vino, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de la densidad por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Densidad",  tickvals = seq(min(vino_blanco_data$density), max(vino_blanco_data$density), by = 0.003)),
margin = list(b = 100))
fig
cat("Media: ",mean(density.vino))
cat("\nMediana: ",median(density.vino))
cat("\nModa: ",mfv(density.vino))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~pH, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia del pHs únicos por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "pH",  tickvals = seq(min(vino_blanco_data$pH), max(vino_blanco_data$pH), by = 0.15)),
margin = list(b = 100))
fig
cat("Media: ",mean(ph))
cat("\nMediana: ",median(ph))
cat("\nModa: ",mfv(ph))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~sulphates, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de los niveles de sulfatos por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Sulfatos",  tickvals = seq(min(vino_blanco_data$sulphates), max(vino_blanco_data$sulphates), by = 0.11)),
margin = list(b = 100))
fig
cat("Media: ",mean(sulphates))
cat("\nMediana: ",median(sulphates))
cat("\nModa: ",mfv(sulphates))
fig <- plot_ly(vino_blanco_data, x = ~quality, y = ~alcohol, type = 'box',
marker = list(color = 'purple'))
fig <- fig %>%
layout(title = "Frecuencia de los grados de alcohol por calidad de vino",
xaxis = list(title = "Niveles de calidad"),
yaxis = list(title = "Alcohol",  tickvals = seq(min(vino_blanco_data$alcohol), max(vino_blanco_data$alcohol), by = 1.2)),
margin = list(b = 100))
fig
cat("Media: ",mean(alcohol))
cat("\nMediana: ",median(alcohol))
cat("\nModa: ",mfv(alcohol))
datos <- c(0.354, 0.29, 0.32, 0.32, 0.31, 0.32, 0.36)
media <- mean(datos)
desviacion_estandar <- sd(datos)
cv <- (desviacion_estandar / media) * 100
cat("Media:", media, "\n")
cat("Desviación estándar:", desviacion_estandar, "\n")
cat("Coeficiente de variación de los valores centrales gráfico 3 (%):", cv, "\n")
datos <- c(0.354, 0.29, 0.32, 0.32, 0.31, 0.32, 0.36)
media <- mean(datos)
desviacion_estandar <- sd(datos)
cv <- (desviacion_estandar / media) * 100
cat("Media:", media, "\n")
cat("Desviación estándar:", desviacion_estandar, "\n")
cat("Coeficiente de variación de los valores centrales gráfico 3:", cv, "%\n")
library(dplyr)
library(ggpubr)
library(plotly)
library(kableExtra)
library(summarytools)
library(psych)
library(DT)
library(modeest)
fixed.acidity <-(vino_blanco_data[,1]) # vector con las acidad fija
volatile.acidity <-(vino_blanco_data[,2]) # acidad volatil
citric.acid <- (vino_blanco_data[,3]) # acidad citrica
residual.sugar <- (vino_blanco_data[,4]) # azúcar residual
chlorides <- (vino_blanco_data[,5]) # cloruro
free.sulfur.dioxide <-(vino_blanco_data[,6])  # dioxido de sulfuro libre
total.sulfur.dioxide <- (vino_blanco_data[,7]) # dioxido de sulfuro total
density.vino <- (vino_blanco_data[,8]) # densidad del vino
ph <- (vino_blanco_data[,9]) # ph del vino
sulphates <- (vino_blanco_data[,10]) #creo que se refiere a sulphites o sulfitos que preservan a los vinos, porque sulphates se utiliza para la espuma de shampo y jabón
alcohol <- (vino_blanco_data[,11]) #grado de alcohol, del vino
quality <- (vino_blanco_data[,12]) #calidad del vino
vino_blanco_data_frame <- data.frame(fixed.acidity, volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density.vino, ph, sulphates, alcohol, quality)
metricas = describe(vino_blanco_data_frame,IQR=T,quant=c(.25,.50,.75)) #Cálculo e métricas
datatable(
metricas,
options = list(pageLength = 10),
caption = "Tabla descriptiva del vino blanco"
)
tabla_descriptiva_2 <- data.frame("Variables" = c(
"fixed.acidity",
"volatile.acidity",
"citric.acid",
"residual.sugar",
"chlorides",
"free.sulfur.dioxide",
"total.sulfur.dioxide",
"density.vino",
"ph",
"sulphates",
"alcohol",
"quality"),
"Descripción" = c(
"Concentración Acides fija",
"Concentración acides volatil",
"Concentración acides citrica",
"Azúcar residual",
"Concentración de cloruro",
"Dioxido de sulfuro libre",
"Dioxido de sulfuro total",
"Densidad del vino",
"pH del vino",
"Sulfitos que preservan a los vinos",
"Grado de alcohol del vino ",
"calidad del vino",
),
"Tipo de variable" = c(
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cualitativa",))
fixed.acidity <-(vino_blanco_data[,1]) # vector con las acidad fija
volatile.acidity <-(vino_blanco_data[,2]) # acidad volatil
citric.acid <- (vino_blanco_data[,3]) # acidad citrica
residual.sugar <- (vino_blanco_data[,4]) # azúcar residual
chlorides <- (vino_blanco_data[,5]) # cloruro
free.sulfur.dioxide <-(vino_blanco_data[,6])  # dioxido de sulfuro libre
total.sulfur.dioxide <- (vino_blanco_data[,7]) # dioxido de sulfuro total
density.vino <- (vino_blanco_data[,8]) # densidad del vino
ph <- (vino_blanco_data[,9]) # ph del vino
sulphates <- (vino_blanco_data[,10]) #creo que se refiere a sulphites o sulfitos que preservan a los vinos, porque sulphates se utiliza para la espuma de shampo y jabón
alcohol <- (vino_blanco_data[,11]) #grado de alcohol, del vino
quality <- (vino_blanco_data[,12]) #calidad del vino
vino_blanco_data_frame <- data.frame(fixed.acidity, volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density.vino, ph, sulphates, alcohol, quality)
metricas = describe(vino_blanco_data_frame,IQR=T,quant=c(.25,.50,.75)) #Cálculo e métricas
datatable(
metricas,
options = list(pageLength = 10),
caption = "Tabla descriptiva del vino blanco"
)
tabla_descriptiva_2 <- data.frame("Variables" = c(
"fixed.acidity",
"volatile.acidity",
"citric.acid",
"residual.sugar",
"chlorides",
"free.sulfur.dioxide",
"total.sulfur.dioxide",
"density.vino",
"ph",
"sulphates",
"alcohol",
"quality"),
"Descripción" = c(
"Concentración Acides fija",
"Concentración acides volatil",
"Concentración acides citrica",
"Azúcar residual",
"Concentración de cloruro",
"Dioxido de sulfuro libre",
"Dioxido de sulfuro total",
"Densidad del vino",
"pH del vino",
"Sulfitos que preservan a los vinos",
"Grado de alcohol del vino ",
"calidad del vino"
),
"Tipo de variable" = c(
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cuantitativa",
"Cualitativa"))
tabla2 <- kable(tabla_descriptiva_2,
caption = "Tabla 2.- Tabla descriptiva") %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T, border_right = T)
tabla2
